package com.vn.trn.app.framework.container;

import java.io.IOException;
import java.sql.SQLException;
import java.util.Stack;

/**
 * Resource <br>
 * <br>
 * [??????] class <br>
 * <br>
 * [?????????????????????]<br>
 * <br>
 * <br>
 * [??????]<br>
 * ????????????????????????????????? <br>
 * <br>
 * [???????????????]<br>
 * Resource resource = new Resource(); <br>
 * <br>
 * [????????????]<br>
 * 
 * <pre>
 * resource.getConnection();
 * resource.getConnection();
 * 
 * ???????????????????????????
 * resource.add(connection);
 * 
 * ??????????????????????????????
 * resource.release();
 * </pre>
 * 
 * <br>
 * <br>
 * [??????]<br>
 * ???????????????????????????????????????????????????
 * <ul>
 * <li>java.sql.Connection
 * <li>java.sql.Statement
 * <li>org.seasar.dao.lazy.LazyResult
 * <li>java.io.Reader
 * <li>java.io.Writer
 * <li>java.io.InputStream
 * <li>java.io.OutputStream
 * </ul>
 * <br>
 * <br>
 */
public class ResourceContainer {

	/** ??????????????????????????? */
	private Stack<Object> resources = null;

	/**
	 * ?????????????????????
	 */
	public ResourceContainer() {
		resources = new Stack<Object>();
	}

	/**
	 * ??????????????????????????????
	 * @param resource ????????????????????????
	 */
	public void add(Object resource) {
		resources.push(resource);
	}

	/**
	 * ??????????????????????????????
	 * @exception Exception ???????????????????????????????????????
	 */
	public void release() throws Exception {
		while (!resources.empty()) {
			Object resource = resources.pop();
			// Polymorphism??????????????????
			if (resource instanceof java.sql.Connection) {
				try {
					((java.sql.Connection) resource).close();
				} catch (SQLException ex) {
					ex = null; // CheckStyle
				}
			} else if (resource instanceof java.sql.Statement) {
				try {
					((java.sql.Statement) resource).close();
				} catch (SQLException ex) {
					ex = null; // CheckStyle
				}
			} else if (resource instanceof org.seasar.dao.lazy.LazyResult) {
				((org.seasar.dao.lazy.LazyResult) resource).close();
			} else if (resource instanceof java.io.Reader) {
				try {
					((java.io.Reader) resource).close();
				} catch (IOException ex) {
					ex = null; // CheckStyle
				}
			} else if (resource instanceof java.io.Writer) {
				try {
					((java.io.Writer) resource).close();
				} catch (IOException ex) {
					ex = null; // CheckStyle
				}
			} else if (resource instanceof java.io.InputStream) {
				try {
					((java.io.InputStream) resource).close();
				} catch (IOException ex) {
					ex = null; // CheckStyle
				}
			} else if (resource instanceof java.io.OutputStream) {
				try {
					((java.io.OutputStream) resource).close();
				} catch (IOException ex) {
					ex = null; // CheckStyle
				}
			} else {
				throw new Exception("Can't Release a resource " + resource);
			}
		}
		return;
	}
}