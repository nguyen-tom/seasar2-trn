package com.vn.trn.app.framework.container;

import java.util.ArrayList;
import java.util.Enumeration;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpSession;

import org.seasar.framework.log.Logger;

import com.vn.trn.app.constants.FrameworkConstants;
import com.vn.trn.app.constants.SessionPrefix;

/**
 * <h3>SessionController</h3> <br>
 * <dl>
 * <dt>[??????]</dt>
 * <dd>????????????????????????</dd>
 * <dt>[?????????????????????]</dt>
 * <dd></dd>
 * <dt>[??????]</dt>
 * <dd></dd>
 * <dt>[??????]</dt>
 * <dd></dd>
 */
public class SessionController {

	/** Logger(log4j) */
	private static Logger log = Logger.getLogger(SessionController.class);

	/** ??????????????????????????????????????????????????????????????????????????? */
	private Map<String, Object> saveAttrsTable;

	/**
	 * ?????????????????????
	 */
	public SessionController() {
		saveAttrsTable = new HashMap<String, Object>();
		// ?????????????????????????????????????????????????????????????????????????????????
		saveAttrsTable.put("org.apache.struts.action.TOKEN", true);
		saveAttrsTable.put("org.apache.struts.action.LOCALE", true);
		saveAttrsTable.put("s2strutsContext", true);
		saveAttrsTable.put(FrameworkConstants.SESSION_LOGIN_USER_DATA_ATTR_NAME, true);
	}

	/**
	 * ?????????????????????????????????????????????????????????????????????????????????????????????
	 * @param saveAttrsTable ???????????????????????????????????????????????????????????????????????????
	 */
	public void setSaveAttrsTable(Map<String, Object> saveAttrsTable) {
		this.saveAttrsTable = saveAttrsTable;
	}

	/**
	 * ?????????????????????????????????????????????????????????????????????????????????????????????
	 * @return ???????????????????????????????????????????????????????????????????????????
	 */
	public Map<String, Object> getSaveAttrsTable() {
		return saveAttrsTable;
	}

	/**
	 * ????????????????????????????????????
	 * @param session ??????
	 */
	public void removeSessionAttribute(HttpSession session) {
		Enumeration<String> keys = session.getAttributeNames();
		List<String> removeList = new ArrayList<String>();
		// ?????????????????????????????????
		while (keys.hasMoreElements()) {
			String key = (String) keys.nextElement();
			if (!saveAttrsTable.containsKey(key)) {
				removeList.add(key);
				log.debug(key + "???list????????????????????????");
			}
		}
		// ??????
		for (String key : removeList) {
			session.removeAttribute(key);
			log.debug(key + "???session???????????????????????????");
		}
	}

	/**
	 * ????????????????????????????????????
	 * @param session ??????
	 * @param p SessionPrefix
	 */
	public void removeSessionAttribute(HttpSession session, SessionPrefix p) {
		Enumeration<String> keys = session.getAttributeNames();
		List<String> removeList = new ArrayList<String>();
		// ?????????????????????????????????
		while (keys.hasMoreElements()) {
			String key = (String) keys.nextElement();
			if (key.matches(p.getPattern()) && !saveAttrsTable.containsKey(key)) {
				removeList.add(key);
				log.debug(key + "???list????????????????????????");
			}
		}
		// ??????
		for (String key : removeList) {
			session.removeAttribute(key);
			log.debug(key + "???session???????????????????????????");
		}
		return;
	}
}
