package com.vn.trn.app.framework.container.impl;

import java.util.HashMap;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.Globals;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionMessage;
import org.apache.struts.action.ActionMessages;
import org.apache.struts.util.MessageResources;

import com.vn.trn.app.constants.FrameworkConstants;
import com.vn.trn.app.constants.SessionPrefix;
import com.vn.trn.app.entity.LoginUserData;
import com.vn.trn.app.framework.container.RequestContext;
import com.vn.trn.app.framework.container.ResourceContainer;
import com.vn.trn.app.framework.container.SessionController;
import com.vn.trn.app.framework.error.exception.ApplicationErrorException;
import com.vn.trn.app.log.ServletLogMessageStyler;

/**
 * RequestContext
 * Request/Response/ActionForm??????????????????????????????
 * ???MotherServlet?????????
 * RequestContextInterceptor(MotherServlet??????)???
 * RequestContextActionExecuteInterceptor(Servlet/Action??????)???????????????????????????
 */
public class RequestContextImpl implements RequestContext {

	/** HttpServletRequest???????????? */
	private ThreadLocal<HttpServletRequest> requests = new ThreadLocal<HttpServletRequest>();

	/** HttpServletResponse???????????? */
	private ThreadLocal<HttpServletResponse> responses = new ThreadLocal<HttpServletResponse>();

	/** Action???????????? */
	private ThreadLocal<Object> actions = new ThreadLocal<Object>();

	/** ActionForm???????????? */
	private ThreadLocal<ActionForm> actionForms = new ThreadLocal<ActionForm>();

	/** ActionMapping???????????? */
	private ThreadLocal<ActionMapping> actionMappings = new ThreadLocal<ActionMapping>();

	/** ???????????????????????? */
	private ThreadLocal<ActionMessages> errors = new ThreadLocal<ActionMessages>();

	/** ResourceContainer???????????? */
	private ThreadLocal<ResourceContainer> resourceContainers = new ThreadLocal<ResourceContainer>();

	/** ????????????????????????????????? */
	private ThreadLocal<String> servletNames = new ThreadLocal<String>();

	/** dispatchMethod??????????????? */
	private ThreadLocal<String> dispatchMethodNames = new ThreadLocal<String>();

	/** ??????forward??? */
	private ThreadLocal<String> forwardOverrides = new ThreadLocal<String>();

	/*** forward????????????????????????Map */
	private ThreadLocal<HashMap<String, String>> forwardParameters = new ThreadLocal<HashMap<String, String>>();

	/** ????????????????????????????????? */
	private ServletLogMessageStyler logWriter = ServletLogMessageStyler.getInstance();

	/** ???????????????????????? */
	private SessionController sessionController = new SessionController();

	/**
	 * ?????????????????????
	 * ???????????????????????????????????????
	 */
	public RequestContextImpl() {}

	/**
	 * ActionForm???Validate???????????????????????????????????????????????????
	 * ????????????????????????ASPException?????????????????????
	 * @return boolean ???????????????:true, ??????:false
	 */
	public boolean inputCheck() {
		HttpServletRequest request = this.getRequest();
		ActionForm form = this.getActionForm();
		ActionMapping mapping = this.getActionMapping();
		ActionMessages errors = form.validate(mapping, request);
		if (errors.isEmpty()) {
			return true;
		}
		this.addErrors(errors);
		return false;
	}

	/**
	 * securityLog??????????????????
	 * @param message <code>String</code> ????????????
	 */
	public void writeSecurityLog(String message) {
		logWriter.writeSecurityLog(message, getRequest(), getLogProgramName());
	}

	/**
	 * securityLog???????????????(userId??????)
	 * @param message <code>String</code> ????????????
	 * @param userId <code>String</code> ?????????ID
	 */
	public void writeSecurityLog(String message, String userId) {
		logWriter.writeSecurityLog(message, userId, getRequest(), getLogProgramName());
	}

	/**
	 * exceptionLog??????????????????
	 * @param ex <code>Exception</code>
	 */
	public void writeExceptionLog(Exception ex) {
		logWriter.writeExceptionLog(ex, getRequest(), getLogProgramName());
	}

	/**
	 * MessageResources??????????????????(Action#getResources())
	 * Struts1.2.9???Action.java??????????????????
	 * @return MessageResources message resources
	 */
	public MessageResources getResources() {
		return ((MessageResources) getRequest().getAttribute(Globals.MESSAGES_KEY));
	}

	/**
	 * Request?????????
	 * @return HttpServletRequest Request??????????????????
	 */
	public HttpServletRequest getRequest() {
		return this.requests.get();
	}

	/**
	 * Request?????????
	 * @param request HttpServletRequest Request??????????????????
	 */
	public void setRequest(HttpServletRequest request) {
		this.requests.set(request);
	}

	/**
	 * getRequest().getAttribute(key)
	 * @param key key
	 * @return Object value
	 */
	public Object getRequest(String key) {
		return this.getRequest().getAttribute(key);
	}

	/**
	 * getRequest().removeAttribute(key)
	 * @param key key
	 */
	public void removeRequest(String key) {
		this.getRequest().removeAttribute(key);
	}

	/**
	 * getRequest().setAttribute(key, value)
	 * @param key  key
	 * @param value value
	 */
	public void setRequest(String key, Object value) {
		this.getRequest().setAttribute(key, value);
	}

	/**
	 * Session?????????
	 * @return HttpSession Session??????????????????
	 */
	public HttpSession getSession() {
		return this.requests.get().getSession();
	}

	/**
	 * getSession().getAttribute(key)
	 * @param key key
	 * @return Object value
	 */
	public Object getSession(String key) {
		return this.getSession().getAttribute(key);
	}

	/**
	 * getSession().removeAttribute(key)
	 * @param key key
	 */
	public void removeSession(String key) {
		this.getSession().removeAttribute(key);
	}

	/**
	 * getSession().setAttribute(key, value)
	 * @param key key
	 * @param value value
	 */
	public void setSession(String key, Object value) {
		this.getSession().setAttribute(key, value);
	}

	/**
	 * Response???????????????????????????
	 * @return HttpServletResponse Response??????????????????
	 */
	public HttpServletResponse getResponse() {
		return this.responses.get();
	}

	/**
	 * Response???????????????????????????
	 * @param response HttpServletResponse Response??????????????????
	 */
	public void setResponse(HttpServletResponse response) {
		this.responses.set(response);
	}

	/**
	 * Action?????????
	 * @return Action??????????????????
	 */
	public Object getAction() {
		return this.actions.get();
	}

	/**
	 * Action?????????
	 * @param action Object Action??????????????????
	 */
	public void setAction(Object action) {
		this.actions.set(action);
	}

	/**
	 * ActionForm?????????
	 * @return ActionForm
	 */
	public ActionForm getActionForm() {
		return this.actionForms.get();
	}

	/**
	 * ActionForm?????????
	 * @param form ActionForm
	 */
	public void setActionForm(ActionForm form) {
		this.actionForms.set(form);
	}

	/**
	 * ActionMapping?????????
	 * @return ActionMapping
	 */
	public ActionMapping getActionMapping() {
		return this.actionMappings.get();
	}

	/**
	 * ActionMapping?????????
	 * @param mapping ActionMapping
	 */
	public void setActionMapping(ActionMapping mapping) {
		this.actionMappings.set(mapping);
	}

	/**
	 * ????????????????????????(ActionMessages)?????????
	 * @return ActionMessages ActionMessages
	 */
	public ActionMessages getErrors() {
		return this.errors.get();
	}

	/**
	 * ????????????????????????(ActionMessages)?????????
	 * @param messages ActionMessages
	 */
	public void setErrors(ActionMessages messages) {
		this.errors.set(messages);
	}

	/**
	 * ????????????????????????(ActionMessages)?????????
	 * @param messages ActionMessages
	 */
	public void addErrors(ActionMessages messages) {
		this.getErrors().add(messages);
	}

	/**
	 * ????????????????????????(ActionMessage)?????????
	 * ????????????????????????ActionMessages.GLOBAL_MESSAGE?????????????????????
	 * @param message ActionMessages ????????????????????????
	 */
	public void addErrors(ActionMessage message) {
		this.getErrors().add(ActionMessages.GLOBAL_MESSAGE, message);
	}

	/**
	 * ???????????????????????????/????????????????????????????????????throw?????????????????????????????????
	 */
	public void throwErrors() {
		ActionMessages errors = this.getErrors();
		if (null == errors || errors.isEmpty()) {
			throw new ApplicationErrorException(false);
		} else {
			throw new ApplicationErrorException(false, errors);
		}
	}

	/**
	 * ResourceContainer?????????
	 * @return ResourceContainer
	 */
	public ResourceContainer getResourceContainer() {
		return this.resourceContainers.get();
	}

	/**
	 * ResourceContainer?????????
	 * @param resourceContainer ResourceContainer
	 */
	public void setResourceContainer(ResourceContainer resourceContainer) {
		this.resourceContainers.set(resourceContainer);
	}

	/**
	 * ??????????????????????????????
	 * @return ?????????????????????
	 */
	public String getServletName() {
		return this.servletNames.get();
	}

	/**
	 * ??????????????????????????????
	 * @param servletName ?????????????????????
	 */
	public void setServletName(String servletName) {
		this.servletNames.set(servletName);
	}

	/**
	 * dispatchMethod????????????
	 * @return ?????????????????????
	 */
	public String getDispatchMethodName() {
		return this.dispatchMethodNames.get();
	}

	/**
	 * dispatchMethod????????????
	 * @param dispatchMethodName dispatchMethod???
	 */
	public void setDispatchMethodName(String dispatchMethodName) {
		this.dispatchMethodNames.set(dispatchMethodName);
	}

	/**
	 * ????????????????????????????????????
	 * @return ???????????????????????????
	 */
	public String getLogProgramName() {
		return getServletName() + "#" + getDispatchMethodName();
	}

	/**
	 * ??????????????????Forward??????????????????
	 * @return String Forward???
	 */
	public String getForward() {
		return this.forwardOverrides.get();
	}

	/**
	 * ???????????????Forward??????????????????
	 * @param forward
	 *            String forward???
	 */
	public void setForward(String forward) {
		this.forwardOverrides.set(forward);
	}

	/**
	 * Forward???????????????????????????????????????
	 * Forward???????????????????????????????????????????????????????????????Key????????????????????????
	 * @param key ??????
	 * @param value ???
	 */
	public void addForwardParameter(String key, String value) {
		HashMap<String, String> fmap = forwardParameters.get();
		// Map???null???????????????
		if (null == fmap) {
			fmap = new HashMap<String, String>();
			forwardParameters.set(fmap);
		}
		fmap.put(key, value);
	}

	/**
	 * Forward????????????????????????Map??????????????????
	 * Action??????????????????????????????????????????
	 * ??????Map????????????????????????????????????????????????
	 * @return HashMap ????????????
	 */
	public HashMap<String, String> getForwardParameters() {
		HashMap<String, String> fmap = this.forwardParameters.get();
		// Map???null???????????????
		if (null == fmap) {
			fmap = new HashMap<String, String>();
			this.forwardParameters.set(fmap);
		}
		return fmap;
	}

	
	public void setForwardParameters(HashMap<String, String> forwardParameters) {
		this.forwardParameters.set(forwardParameters);
	}

	/**
	 * ?????????????????????????????????(???????????????????????????)
	 */
	public void clearSession() {
		HttpSession session = this.getSession();
		if (null != session) {
			sessionController.removeSessionAttribute(this.getSession());
		}
		return;
	}

	/**
	 * ?????????????????????????????????????????????(???????????????????????????)
	 * @param p SessionPrefix
	 */
	public void clearSession(SessionPrefix p) {
		HttpSession session = this.getSession();
		if (null != session) {
			sessionController.removeSessionAttribute(this.getSession(), p);
		}
	}

	/**
	 * ??????????????????????????????????????????
	 * @return ???????????????????????????
	 */
	public LoginUserData getLoginUserData() {
		return (LoginUserData) getRequest(FrameworkConstants.LOGIN_USER_DATA_ATTR_NAME);
	}
}