package com.vn.trn.app.log;

import javax.servlet.http.HttpServletRequest;

import org.seasar.framework.container.S2Container;
import org.seasar.framework.container.factory.SingletonS2ContainerFactory;

import com.vn.trn.app.entity.LoginUserData;
import com.vn.trn.app.framework.container.RequestContext;

/**
 * <h3>ServletLogMessageStyler</h3> <br>
 * <dl>
 * <dt>[??????]</dt>
 * <dd>Web?????????????????????????????????????????? ???????????????????????????????????????????????????????????????????????????</dd>
 * <dt>[??????]</dt>
 * <dd></dd>
 * </dl>
 */
public final class ServletLogMessageStyler {

	/** Singleton?????????????????? */
	private static ServletLogMessageStyler servletLogMessageStyler = new ServletLogMessageStyler();

	/** ???????????????Logger */
	private SystemLogger systemLogger = SystemLogger.getInstance();

	/** ??????????????????RequestContext??? */
	private boolean initialized = false;

	/** RequestContext */
	private RequestContext requestContext = null;

	/** ?????????????????? ' '???????????? */
	private static final char DELIMITER_S = ' ';

	/** Singleton?????????protected */
	public ServletLogMessageStyler() {
		// S2Container container = SingletonS2ContainerFactory.getContainer();
		// requestContext = (RequestContext)
		// container.getComponent(RequestContext.class);
	}

	/**
	 * RequestContext?????????
	 */
	private synchronized void initialize() {
		if (!initialized) {
			S2Container container = SingletonS2ContainerFactory.getContainer();
			requestContext = (RequestContext) container
					.getComponent(RequestContext.class);
			initialized = true;
		}
		return;
	}

	/**
	 * ????????????????????????????????????
	 * @return ServletLogMessageStyler
	 */
	public static ServletLogMessageStyler getInstance() {
		return servletLogMessageStyler;
	}

	/**
	 * securityLog
	 * @param message <code>String</code> ?????????????????????
	 * @param request <code>HttpServletRequest</code>
	 * @param servletName <code>String</code> ?????????????????????
	 */
	public void writeSecurityLog(String message, HttpServletRequest request,
			String servletName) {
		StringBuffer logMessage = new StringBuffer();
		logMessage.append(servletName); // [??????????????????]
		logMessage.append(DELIMITER_S);
		logMessage.append(request.getRemoteHost()); // [IP????????????]
		logMessage.append(DELIMITER_S);
		logMessage.append(getLoginIDFromRequestObj(request)); // [?????????ID]
		logMessage.append(DELIMITER_S);
		logMessage.append(message); // ????????????
		// ??????????????????????????????
		systemLogger.writeSecurityLog(logMessage.toString());
		return;
	}

	/**
	 * securityLog(userId??????)
	 * @param message <code>String</code> ?????????????????????
	 * @param userId <code>String</code> ?????????ID
	 * @param request <code>HttpServletRequest</code>
	 * @param servletName <code>String</code> ?????????????????????
	 */
	public void writeSecurityLog(String message, String userId, HttpServletRequest request, String servletName) {
		StringBuffer logMessage = new StringBuffer();
		logMessage.append(servletName); // [??????????????????]
		logMessage.append(DELIMITER_S);
		logMessage.append(request.getRemoteHost()); // [IP????????????]
		logMessage.append(DELIMITER_S);
		logMessage.append(userId); // [?????????ID]
		logMessage.append(DELIMITER_S);
		logMessage.append(message); // ????????????
		// ??????????????????????????????
		systemLogger.writeSecurityLog(logMessage.toString());
		return;
	}

	/**
	 * securityLog(userId, remoteIp??????)
	 * @param message <code>String</code> ?????????????????????
	 * @param userId <code>String</code> ?????????ID
	 * @param remoteIp <code>request.getRemoteHost()</code>
	 * @param servletName <code>String</code> ?????????????????????
	 */
	public void writeSecurityLog(String message, String userId, String remoteIp, String servletName) {
		StringBuffer logMessage = new StringBuffer();
		logMessage.append(servletName); // [??????????????????]
		logMessage.append(DELIMITER_S);
		logMessage.append(remoteIp); // [IP????????????]
		logMessage.append(DELIMITER_S);
		logMessage.append(userId); // [?????????ID]
		logMessage.append(DELIMITER_S);
		logMessage.append(message); // ????????????
		// ??????????????????????????????
		systemLogger.writeSecurityLog(logMessage.toString());
		return;
	}

	/**
	 * exceptionLog
	 * @param ex <code>Exception</code>
	 * @param request <code>HttpServletRequest</code>
	 * @param servletName <code>String</code> ?????????????????????
	 */
	public void writeExceptionLog(Exception ex, HttpServletRequest request, String servletName) {
		StringBuffer logMessage = new StringBuffer();
		logMessage.append(servletName); // [??????????????????]
		logMessage.append(DELIMITER_S);
		logMessage.append(getLoginIDFromRequestObj(request)); // [?????????ID]
		logMessage.append(DELIMITER_S);
		// ??????????????????????????????
		systemLogger.writeExceptionLog(logMessage.toString(), ex);
		return;
	}

	/**
	 * exceptionLog(message?????????)
	 * @param message <code>String</code> ?????????????????????
	 * @param userId <code>userId</code>
	 * @param servletName <code>String</code> ?????????????????????
	 */
	public void writeExceptionLog(String message, String userId, String servletName) {
		StringBuffer logMessage = new StringBuffer();
		logMessage.append(servletName); // [??????????????????]
		logMessage.append(DELIMITER_S);
		logMessage.append(userId); // [?????????ID]
		logMessage.append(DELIMITER_S);
		logMessage.append(message); // ???????????????
		// ??????????????????????????????
		systemLogger.writeExceptionLog(logMessage.toString());
		return;
	}

	/**
	 * exceptionLog(userId?????????)
	 * @param ex <code>Exception</code>
	 * @param userId <code>userId</code>
	 * @param servletName <code>String</code> ?????????????????????
	 */
	public void writeExceptionLog(Exception ex, String userId,
			String servletName) {
		StringBuffer logMessage = new StringBuffer();
		logMessage.append(servletName); // [??????????????????]
		logMessage.append(DELIMITER_S);
		logMessage.append(userId); // [?????????ID]
		logMessage.append(DELIMITER_S);
		// ??????????????????????????????
		systemLogger.writeExceptionLog(logMessage.toString(), ex);
	}

	/**
	 * ???????????????????????????????????????????????????????????????????????????????????????
	 * @param request <code>HttpServletRequest</code>
	 * @return String ?????????????????????????????????????????????????????????????????????????????????????????????????????????
	 */
	private String getLoginIDFromRequestObj(HttpServletRequest request) {
		if (!initialized) {
			initialize();
		}
		String loginID = "";
		LoginUserData lud = requestContext.getLoginUserData();
		if (null != lud) {
			//loginID = lud.getUserId();
		}
		return loginID;
	}
}